FROM node:20-alpine3.19 AS deps
WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production

FROM node:20-alpine3.19 AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .
ENV NEXT_TELEMETRY_DISABLED=1
ENV GEL_DATABASE_URL=postgres://user:pass@localhost:5432/db
RUN npm run build

FROM node:20-alpine3.19 AS runner
WORKDIR /app
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Create non-root user
RUN addgroup -g 1001 -S nodejs && adduser -S nextjs -u 1001

# Install security updates and required packages
RUN apk add --no-cache netcat-openbsd curl && apk upgrade --no-cache

# Create necessary directories
RUN mkdir -p ./public ./uploads ./logs

# Copy application files
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/uploads ./uploads
COPY ./scripts ./scripts
COPY ./docker/entrypoint.sh /entrypoint.sh

# Set proper permissions
RUN chmod +x /entrypoint.sh
RUN chown -R nextjs:nodejs /app
RUN chmod -R 755 /app/uploads

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:3000/api/health || exit 1

USER nextjs
EXPOSE 3000
ENTRYPOINT ["/entrypoint.sh"]
