services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    ports:
      - "${APP_PORT:-3000}:3000"
    environment:
      - NODE_ENV=production
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - GEL_DATABASE_URL=postgres://${DB_USER:-gel}:${DB_PASSWORD}@geldb:5432/${DB_NAME:-gel}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID:-}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET:-}
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USER=${SMTP_USER:-}
      - SMTP_PASS=${SMTP_PASS:-}
      - APP_NAME=${APP_NAME:-KonBase}
      - APP_URL=${APP_URL:-http://localhost:3000}
    depends_on:
      geldb:
        condition: service_healthy
    volumes:
      - app_uploads:/app/uploads
    restart: unless-stopped
    networks:
      - konbase_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  geldb:
    image: geldata/gel:latest
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      - GEL_SERVER_SECURITY=${GEL_SECURITY_MODE:-password}
      - GEL_SERVER_DEFAULT_AUTH_METHOD=${GEL_AUTH_METHOD:-password}
      - GEL_SERVER_PASSWORD=${DB_PASSWORD}
      - GEL_SERVER_USER=${DB_USER:-gel}
      - GEL_SERVER_DATABASE=${DB_NAME:-gel}
    volumes:
      - geldb_data:/var/lib/gel/data
      - ./scripts/gel/migrations:/docker-entrypoint-initdb.d/migrations:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-p", "5432", "-U", "${DB_USER:-gel}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - konbase_network

  # Optional: Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - konbase_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5

volumes:
  geldb_data:
    driver: local
  app_uploads:
    driver: local
  redis_data:
    driver: local

networks:
  konbase_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
